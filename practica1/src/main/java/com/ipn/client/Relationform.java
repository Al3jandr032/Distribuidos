package com.ipn.client;


import com.ipn.server.Server;
import com.ipn.vo.Alumno;
import com.ipn.vo.Asignacion;
import com.ipn.vo.AsignacionPK;
import com.ipn.vo.Curso;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.math.BigDecimal;
import java.net.Socket;
import java.sql.Date;
import java.util.HashMap;
import javax.swing.DefaultListModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author alopeze
 */
public class Relationform extends javax.swing.JFrame {

    /**
     * Creates new form Applicationform
     * @param dao
     */
    public Relationform(int mode) {
        this.mode = mode;
        
        initComponents();
        this.alumnoComboBox.removeAllItems();
        this.cursoComboBox.removeAllItems();
        if(this.mode == Relationform.CREATE){
            this.alumnoComboBox.setEnabled(true);
            this.cursoComboBox.setEnabled(true);
            this.loadAlumnos();
            this.loadCursos();
        }
        
    }

    public Asignacion getAsignacion() {
        AsignacionPK aux = new AsignacionPK(Integer.parseInt(this.jTextFieldAlumno.getText()),
        Integer.parseInt(this.jTextFieldCurso.getText()));
        asignacion = new Asignacion(aux, this.jTextFieldHorario.getText(), 
                Integer.parseInt(this.jTextFieldTipo.getText()));
        return asignacion;
    }

    public void setAsignacion(Asignacion asignacion) {
        this.asignacion = asignacion;
        this.jTextFieldAlumno.setText(String.valueOf(asignacion.getAsignacionPK().getIdAlumno()));
        this.jTextFieldCurso.setText(String.valueOf(asignacion.getAsignacionPK().getIdAlumno()));
        this.jTextFieldHorario.setText(asignacion.getHorario());
        this.jTextFieldTipo.setText(String.valueOf(asignacion.getTipoCurso()));
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jTextFieldHorario = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jTextFieldTipo = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextFieldAlumno = new javax.swing.JTextField();
        jTextFieldCurso = new javax.swing.JTextField();
        alumnoComboBox = new javax.swing.JComboBox<>();
        cursoComboBox = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Formulario Alumno");

        jButton1.setText("Salvar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel3.setText("Alumno");

        jLabel6.setText("Horario");

        jLabel10.setText("Tipo");

        jLabel4.setText("Curso");

        jTextFieldAlumno.setEnabled(false);

        jTextFieldCurso.setEnabled(false);

        alumnoComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        alumnoComboBox.setEnabled(false);
        alumnoComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                alumnoComboBoxActionPerformed(evt);
            }
        });

        cursoComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cursoComboBox.setEnabled(false);
        cursoComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cursoComboBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(alumnoComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextFieldAlumno, javax.swing.GroupLayout.DEFAULT_SIZE, 132, Short.MAX_VALUE)
                    .addComponent(jLabel3))
                .addGap(33, 33, 33)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel4)
                    .addComponent(jTextFieldCurso, javax.swing.GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE)
                    .addComponent(cursoComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(37, 37, 37)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jTextFieldHorario, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldTipo, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addContainerGap(51, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel6)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldAlumno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextFieldCurso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextFieldHorario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextFieldTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(alumnoComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cursoComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(83, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 72, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(24, 24, 24))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
     
        Asignacion aux = this.getAsignacion();
        
        if(this.mode == CREATE){
            this.operationCreate(aux);
        }else{
            
            this.operationUpdate(aux);
        }
        this.dispose();
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void alumnoComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_alumnoComboBoxActionPerformed
        // TODO add your handling code here:}
        if (this.alumnoComboBox.getItemCount() > 0) {
            String aux = (String) this.alumnoComboBox.getSelectedItem();
            System.out.println("Elemento seleccionado " + aux);
            if (this.alumno_id.containsKey(aux)) {
                this.jTextFieldAlumno.setText(String.valueOf(this.alumno_id.get(aux)));
            }
        }
    }//GEN-LAST:event_alumnoComboBoxActionPerformed

    private void cursoComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cursoComboBoxActionPerformed
        // TODO add your handling code here:
        if (this.cursoComboBox.getItemCount() > 0) {
            String aux = (String) this.cursoComboBox.getSelectedItem();
            System.out.println("Elemento seleccionado " + aux);
            if (this.curso_id.containsKey(aux)) {
                this.jTextFieldCurso.setText(String.valueOf(this.curso_id.get(aux)));
            }
        }
    }//GEN-LAST:event_cursoComboBoxActionPerformed

    private boolean operationCreate(Asignacion a){
        boolean succesful = true;
            System.out.println("creando Alumno: ");
           
            try (Socket socket = new Socket("127.0.0.1", Server.PORT)) {
                ObjectOutputStream dos = new ObjectOutputStream(socket.getOutputStream());
                ObjectInputStream is = new ObjectInputStream(socket.getInputStream());
                
                dos.writeInt(Server.ASIGNACION);
                dos.writeInt(Server.CREATE);
                dos.writeObject(a);
                dos.flush();
                dos.close();
                
            } catch (IOException ex) {
                System.out.println(ex.getMessage());
                System.out.println(ex.getClass());
                System.out.println(ex.getCause());
                succesful = false;
            } 
        
        return succesful;
    }
    
    private boolean operationUpdate(Asignacion a){
        boolean succesful = true;
            System.out.println("creando Alumno: ");
            
            try (Socket socket = new Socket("127.0.0.1", Server.PORT)) {
                ObjectOutputStream dos = new ObjectOutputStream(socket.getOutputStream());
                ObjectInputStream is = new ObjectInputStream(socket.getInputStream());
                
                dos.writeInt(Server.ASIGNACION);
                dos.writeInt(Server.UPDATE);
                dos.writeObject(a);
                dos.flush();
                dos.close();
                
            } catch (IOException ex) {
                System.out.println(ex.getMessage());
                System.out.println(ex.getClass());
                System.out.println(ex.getCause());
                succesful = false;
            } 
        
        return succesful;
    }
    
    private void loadAlumnos(){
        this.alumno_id = new HashMap<>();
        try (Socket socket = new Socket("127.0.0.1", Server.PORT)) {
            ObjectOutputStream dos = new ObjectOutputStream(socket.getOutputStream());
            ObjectInputStream is = new ObjectInputStream(socket.getInputStream());

            dos.writeInt(Server.ALUMNO);
            dos.writeInt(Server.FIND_ALL);
            dos.flush();
            int index = is.readInt();
//            ArrayList<Object> lst = new ArrayList();
            
            for (int i = 0; i < index; i++) {
                Alumno o = (Alumno) is.readObject();
                this.alumno_id.put(o.getNombre(), o.getIdAlumno());
                this.alumnoComboBox.addItem(o.getNombre());
            }
            dos.close();
        } catch (IOException | ClassNotFoundException ex) {
            System.out.println(ex.getMessage());
            System.out.println(ex.getClass());
            System.out.println(ex.getCause());
        }finally{
            this.alumnoComboBox.setSelectedIndex(0);
        }
    }
    
    private void loadCursos(){
        this.curso_id = new HashMap();
         try (Socket socket = new Socket("127.0.0.1", Server.PORT)) {
            ObjectOutputStream dos = new ObjectOutputStream(socket.getOutputStream());
            ObjectInputStream is = new ObjectInputStream(socket.getInputStream());

            
            dos.writeInt(Server.CURSO);
            dos.writeInt(Server.FIND_ALL);
            dos.flush();
            int index = is.readInt();
//            ArrayList<Object> lst = new ArrayList();
   
            for (int i = 0; i < index; i++) {
                Curso o = (Curso) is.readObject();
                this.curso_id.put(o.getNombre(), o.getIdCurso());
                this.cursoComboBox.addItem(o.getNombre());
            }

            dos.close();
        } catch (IOException | ClassNotFoundException ex) {
            System.out.println(ex.getMessage());
            System.out.println(ex.getClass());
            System.out.println(ex.getCause());
        }finally{
            this.cursoComboBox.setSelectedIndex(0);
        }
    }
    
    
    public static int CREATE = 1;
    public static int UPDATE = 2;
    private int mode;
    private Asignacion asignacion;
    private HashMap<String , Integer> alumno_id ;
    private HashMap<String , Integer> curso_id ;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> alumnoComboBox;
    private javax.swing.JComboBox<String> cursoComboBox;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTextFieldAlumno;
    private javax.swing.JTextField jTextFieldCurso;
    private javax.swing.JTextField jTextFieldHorario;
    private javax.swing.JTextField jTextFieldTipo;
    // End of variables declaration//GEN-END:variables
}
